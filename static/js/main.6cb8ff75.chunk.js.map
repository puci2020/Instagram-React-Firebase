{"version":3,"sources":["Theme/GlobalStyles.js","Theme/Theme.js","Theme/Layout.js","firebase.js","Post.js","ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","secondary","white","gray","font","size","xs","s","m","l","breakPoint","phone","Layout","children","firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","PostWrapper","styled","div","PostHeader","Img","img","StyledTooltip","withStyles","tooltip","fontSize","Tooltip","Post","postId","user","data","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","com","Avatar","className","alt","username","src","imageURL","caption","key","text","type","placeholder","value","onChange","e","target","open","title","Button","disabled","onClick","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","UploadWrapper","ImageUpload","image","setImage","setCaption","progress","setProgress","setOpen","max","Input","files","ref","name","put","on","progrss","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","timestapm","Wrapper","Content","Header","LoginWrapper","getModalStyle","top","left","transform","useStyles","makeStyles","paper","position","width","backgroundColor","palette","border","boxShadow","shadows","padding","spacing","display","flexDirection","item","margin","App","classes","React","modalStyle","posts","setPosts","openSignIn","setOpenSignIn","setUsername","email","setEmail","password","setPassword","setUser","onAuthStateChanged","authUser","updateProfile","Modal","onClose","aria-labelledby","aria-describedby","style","createUserWithEmailAndPassword","catch","signInWithEmailAndPassword","signOut","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cb8ff75.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    overflow-x: hidden;\r\n\r\n  }  \r\n  html, body{\r\n  font-size: 10px;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n    colors: {\r\n        background: '#fafafa',\r\n        secondary: '#3E4042',\r\n        white: '#E4E6EB',\r\n        gray: '#dbdbdb'\r\n    },\r\n    font: {\r\n        size:{\r\n            xs: '1rem',\r\n            s: '1.2rem',\r\n            m: '1.4rem',\r\n            l: '1.5rem'\r\n        }\r\n    },\r\n    breakPoint: {\r\n        phone: '@media(max-width: 767px)'\r\n    }\r\n};\r\n","import React from 'react';\r\nimport GlobalStyle from './GlobalStyles'\r\nimport {ThemeProvider} from 'styled-components'\r\nimport {theme} from \"./Theme\";\r\n\r\nconst Layout = ({children}) => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <GlobalStyle/>\r\n            {children}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = firebase.initializeApp( {\r\n    apiKey: \"AIzaSyAzwWt_bY9bjDw6RywollbY3GTSyutdRcU\",\r\n    authDomain: \"instagram-47603.firebaseapp.com\",\r\n    databaseURL: \"https://instagram-47603.firebaseio.com\",\r\n    projectId: \"instagram-47603\",\r\n    storageBucket: \"instagram-47603.appspot.com\",\r\n    messagingSenderId: \"506323584248\",\r\n    appId: \"1:506323584248:web:c4f08df8ff7e9be2a9e70d\",\r\n    measurementId: \"G-5B0Q6Y1FLH\"\r\n});\r\n\r\nconst db = firebaseConfig.firestore();\r\nconst auth = firebaseConfig.auth();\r\nconst storage = firebaseConfig.storage();\r\n\r\nexport {db, auth, storage};\r\n","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport {Button} from \"@material-ui/core\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {db} from \"./firebase\";\r\nimport firebase from 'firebase'\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n\r\nconst PostWrapper = styled.div`\r\n  max-width: 600px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  border: 1px solid ${({theme}) => theme.colors.gray};\r\n  border-radius: 5px;\r\n  text-align: left;\r\n  background-color: white;\r\n  margin-bottom: 45px;\r\n  \r\n  .post__text{\r\n  padding: 10px;\r\n  font-weight: normal;\r\n  font-size: ${({theme}) => theme.font.size.s};\r\n  }\r\n    form{\r\n    display: flex;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: ${({theme}) => theme.font.size.m};\r\n    border-top: 1px solid ${({theme}) => theme.colors.gray};\r\n    \r\n      .post__input{\r\n       border: none;\r\n        outline: none;\r\n        width: 90%;\r\n        padding-left: 10px;\r\n      }\r\n      \r\n      .post__button{\r\n        width: 10%;\r\n        font-size: ${({theme}) => theme.font.size.s};\r\n      }\r\n      \r\n    }\r\n  \r\n`;\r\n\r\nconst PostHeader = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  \r\n  h3{\r\n  margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  object-fit: contain;\r\n   border-top: 1px solid ${({theme}) => theme.colors.gray};\r\n   border-bottom: 1px solid ${({theme}) => theme.colors.gray};\r\n  //height: auto;\r\n`;\r\n\r\nconst StyledTooltip = withStyles({\r\n   tooltip: {\r\n       fontSize: 12\r\n   }\r\n})(Tooltip);\r\n\r\nconst Post = ({postId, user, data}) => {\r\n\r\n\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if (postId) {\r\n            unsubscribe = db\r\n                .collection(\"posts\")\r\n                .doc(postId)\r\n                .collection(\"comments\")\r\n                .orderBy(\"timestamp\", 'asc')\r\n                .onSnapshot(snapshot => {\r\n                    setComments(snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        com: doc.data()\r\n                    })))\r\n                })\r\n        }\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [postId])\r\n\r\n    const postComment = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"comments\")\r\n            .add({\r\n                text: comment,\r\n                username: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        setComment('')\r\n    }\r\n\r\n    return (\r\n        <PostWrapper>\r\n            <PostHeader>\r\n                <Avatar className=\"post__avatar\" alt=\"avatar\" />\r\n                <h3>{data.username}</h3>\r\n            </PostHeader>\r\n            <Img src={data.imageURL} alt=\"Zdjęcie\"/>\r\n            <h4 className=\"post__text\"><strong>{data.username}</strong> {data.caption}</h4>\r\n            {comments.map(({id, com}) => (\r\n                <h4 key={id} className=\"post__text\"><strong>{com.username}</strong> {com.text}</h4>\r\n            ))}\r\n            <form>\r\n                <input type=\"text\" className=\"post__input\" placeholder=\"Add a comment...\" value={comment}\r\n                       onChange={(e) => setComment(e.target.value)}/>\r\n                <StyledTooltip open={comment} title=\"You have to Sign In to comment\">\r\n                       <Button type=\"submit\"\r\n                        className=\"post__button\"\r\n                        disabled={!comment || !user}\r\n                        onClick={postComment}\r\n                >\r\n                    Post\r\n                </Button>\r\n                </StyledTooltip>\r\n            </form>\r\n        </PostWrapper>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport {Button, Input} from \"@material-ui/core\";\r\nimport {db, storage} from \"./firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst UploadWrapper = styled.div`\r\n  .closed{\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  height: 150px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid lightgrey;\r\n  padding: 5px 20px;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: calc(50vw - 200px);\r\n  background-color: ${({theme}) => theme.colors.background};\r\n  transform: translateY(100%);\r\n  transition: transform .35s ease-in-out;\r\n  \r\n  .file{\r\n  padding: 5px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  \r\n  .file__input{\r\n  flex: 1;\r\n\r\n  }\r\n  .file__button{\r\n  flex: 0;\r\n  margin-left: 10px;\r\n  \r\n  }\r\n  }\r\n  \r\n  .control{\r\n  width: 100%;\r\n  font-size: ${({theme}) => theme.font.size.s};\r\n  }\r\n  \r\n  }\r\n  \r\n  .open{\r\n  transform: translateY(0);\r\n  }\r\n  \r\n  .btn{\r\n  position: fixed;\r\n  z-index: 666;\r\n  left: 47vw;\r\n  //right: 50px;\r\n  bottom: 150px;\r\n  width: 100px;\r\n  height: 50px;\r\n  background-color: ${({theme}) => theme.colors.background};\r\n  border: 1px solid lightgrey;\r\n  border-bottom: none;\r\n  \r\n  outline: none;\r\n  transform: translateY(300%);\r\n  transition: transform .35s ease-in-out;\r\n  \r\n  &:hover{\r\n  cursor: pointer;\r\n  background-color: #dbd8d8;\r\n  }\r\n  }\r\n  \r\n  .btnOpen{\r\n  transform: translateY(0);\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n`;\r\n\r\n\r\nconst ImageUpload = ({username}) => {\r\n    const [image, setImage] = useState(null);\r\n    const [caption, setCaption] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                const progrss = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n                setProgress(progrss);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            () => {\r\n                storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\r\n                    db.collection(\"posts\").add({\r\n                        timestapm: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        caption: caption,\r\n                        imageURL: url,\r\n                        username: username,\r\n                    });\r\n                    setProgress(0);\r\n                    setCaption('');\r\n                    setImage(null);\r\n                    setOpen(true);\r\n                });\r\n\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <UploadWrapper>\r\n            <button className={open ? \"btn\" : \"btn btnOpen\"} onClick={handleOpen}>Post new content</button>\r\n            <div className={open ? \"closed\" : \"closed open\"}>\r\n                <progress className=\"control\" value={progress} max=\"100\"/>\r\n                <Input className=\"control\" value={caption} type=\"text\" placeholder=\"Enter a caption...\"\r\n                       onChange={e => setCaption(e.target.value)}/>\r\n                <div className=\"file\">\r\n                    <Input className=\"control file__input\" type=\"file\" onChange={handleChange}/>\r\n                    <Button className=\"control file__button\" onClick={handleUpload}>Upload</Button>\r\n                </div>\r\n            </div>\r\n\r\n        </UploadWrapper>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, {useState, useEffect} from 'react';\nimport styled from \"styled-components\";\nimport Layout from \"./Theme/Layout\";\nimport Post from \"./Post\";\nimport {db, auth} from \"./firebase\";\nimport {Modal, Button, Input} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles';\nimport ImageUpload from \"./ImageUpload\";\nimport InstagramEmbed from 'react-instagram-embed';\n\nconst Wrapper = styled.div`\n  background-color: ${({theme}) => theme.colors.background};\n  min-height: 100vh;\n\n`;\n\nconst Content = styled.div`\n  width: 100vw;\n  padding: 60px 20%;\n  display: grid;\n  grid-template-columns: 1.25fr 1fr;\n  grid-gap: 10px;\n  \n\n  \n  .left{\n      width: 100%;\n      height: fit-content;\n      grid-column: 1;\n  }\n  \n  .right{\n      width: 100%;\n      height: auto;\n      border: 1px solid lightgrey;\n      grid-column: 2;\n  \n  }\n  \n    ${({theme}) => theme.breakPoint.phone}{\n        grid-template-columns: 1fr;\n        padding: 60px 10%;\n    .right {\n      display: none;\n    };\n  }\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  height: 54px;\n  position: fixed;\n  top: 0;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 20%;\n  align-items: center;\n  border-bottom: 1px solid ${({theme}) => theme.colors.gray};\n  background-color: white;\n  z-index: 9;\n  \n  .btn{\n    font-size: ${({theme}) => theme.font.size.xs};\n  }\n  ${({theme}) => theme.breakPoint.phone}{\n    padding: 0 10%;\n   \n  }\n`;\n\n\nconst Img = styled.img`\n  object-fit: contain;\n`;\n\nconst LoginWrapper = styled.div`\n\n`\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    item: {\n        margin: 5,\n        fontSize: 12\n    }\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const [modalStyle] = React.useState(getModalStyle);\n    const [posts, setPosts] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [openSignIn, setOpenSignIn] = useState(false);\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\n            if (authUser) {\n                console.log(authUser);\n                setUser(authUser);\n\n                if (authUser.displayName) {\n\n                } else {\n                    return authUser.updateProfile({\n                        displayName: username\n                    })\n                }\n            } else {\n                setUser(null);\n            }\n        });\n\n        return () => {\n            unsubscribe();\n        }\n\n    }, [user, username]);\n\n    useEffect(() => {\n        db.collection('posts').orderBy('timestapm', 'desc').onSnapshot(snapshot => {\n            setPosts(snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data()\n            })))\n        })\n    }, [posts]);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const signUp = (e) => {\n        e.preventDefault();\n\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((authUser) => {\n                return authUser.user.updateProfile({\n                    displayName: username\n                })\n            })\n            .catch((error) => alert(error.message));\n\n        setOpen(false);\n    };\n\n    const signIn = (e) => {\n        e.preventDefault();\n\n        auth.signInWithEmailAndPassword(email, password)\n            .catch((error) => alert(error.message));\n\n        setOpenSignIn(false);\n    };\n\n    return (\n        <Layout>\n            <Wrapper>\n\n                <Modal\n                    open={open}\n                    onClose={() => setOpen(false)}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <form style={modalStyle} className={classes.paper}>\n\n                        <Img\n                            src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                            alt=\"Instagram Logo\"\n                        />\n                        <Input\n                            placeholder=\"Username\"\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            className={classes.item}\n                        />\n                        <Input\n                            placeholder=\"Email\"\n                            type=\"text\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            className={classes.item}\n                        />\n                        <Input\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            className={classes.item}\n                        />\n                        <Button type=\"submit\" onClick={signUp}\n                                className={classes.item}>Sign Up</Button>\n\n                    </form>\n                </Modal>\n                <Modal\n                    open={openSignIn}\n                    onClose={() => setOpenSignIn(false)}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <form style={modalStyle} className={classes.paper}>\n\n                        <Img\n                            src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                            alt=\"Instagram Logo\"\n                        />\n                        <Input\n                            placeholder=\"Email\"\n                            type=\"text\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            className={classes.item}\n                        />\n                        <Input\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            className={classes.item}\n                        />\n                        <Button type=\"submit\" onClick={signIn}\n                                className={classes.item}>Sign In</Button>\n\n                    </form>\n                </Modal>\n                <Header>\n\n                    <Img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                         alt=\"Instagram Logo\"\n                    />\n                    {user ? (\n                        <Button className=\"btn\" onClick={() => auth.signOut()}>Logout</Button>\n                    ) : (\n                        <LoginWrapper>\n                            <Button className=\"btn\" onClick={handleOpen}>Sign Up</Button>\n                            <Button className=\"btn\" onClick={() => setOpenSignIn(true)}>Sign In</Button>\n\n                        </LoginWrapper>\n                    )}\n\n                </Header>\n                <Content>\n                    <div className=\"left\">\n                        {posts.map(({id, data}) => (\n                            <Post key={id} postId={id} user={user} data={data}/>\n                        ))}\n\n                    </div>\n                    <div className=\"right\">\n                        {/*<InstagramEmbed*/}\n                        {/*    url='https://instagr.am/p/Zw9o4/'*/}\n                        {/*    maxWidth={320}*/}\n                        {/*    hideCaption={false}*/}\n                        {/*    containerTagName='div'*/}\n                        {/*    protocol=''*/}\n                        {/*    injectScript*/}\n                        {/*    onLoading={() => {}}*/}\n                        {/*    onSuccess={() => {}}*/}\n                        {/*    onAfterRender={() => {}}*/}\n                        {/*    onFailure={() => {}}*/}\n                        {/*/>*/}\n                    </div>\n                </Content>\n                {user?.displayName ? (\n                    <ImageUpload username={user.displayName}/>\n                ) : (\n                    <h3>Sorry you need to login to upload</h3>\n                )}\n            </Wrapper>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}